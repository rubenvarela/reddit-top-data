{"kind": "Listing", "data": {"after": "t3_11bng86", "dist": 25, "modhash": "", "geo_filter": "", "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "dataengineering", "selftext": "I got an interview for a solution architect (SA) role at Databricks. There is also a possibility of being a specialist solution architect (SSA) as well. \n\nWondering if anyone from Databricks is here and willing to give their perspective on how working at Databricks has been? \n\nInterested in WLB, Culture, Project structure, and the difference between SA &amp; SSA?", "author_fullname": "t2_ay99iuoj", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Solution Architect @ Databricks", "link_flair_richtext": [], "subreddit_name_prefixed": "r/dataengineering", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_11bcow5", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.93, "author_flair_background_color": null, "subreddit_type": "public", "ups": 36, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Career", "can_mod_post": false, "score": 36, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1677301753.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.dataengineering", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I got an interview for a solution architect (SA) role at Databricks. There is also a possibility of being a specialist solution architect (SSA) as well. &lt;/p&gt;\n\n&lt;p&gt;Wondering if anyone from Databricks is here and willing to give their perspective on how working at Databricks has been? &lt;/p&gt;\n\n&lt;p&gt;Interested in WLB, Culture, Project structure, and the difference between SA &amp;amp; SSA?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "069dd614-a7dc-11eb-8e48-0e90f49436a3", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_36en4", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#349e48", "id": "11bcow5", "is_robot_indexable": true, "report_reasons": null, "author": "Rich_Repair", "discussion_type": null, "num_comments": 17, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/dataengineering/comments/11bcow5/solution_architect_databricks/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://old.reddit.com/r/dataengineering/comments/11bcow5/solution_architect_databricks/", "subreddit_subscribers": 91094, "created_utc": 1677301753.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "dataengineering", "selftext": "This is one of those out-of-the-blue thoughts that you get randomly. I am an expert in sql with many years of experience, but have yet to use Right Joins lol. Is there any specific reason or use-case for this type of join?", "author_fullname": "t2_tln2vge3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Do Right Joins even matter?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/dataengineering", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_11bhvux", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.97, "author_flair_background_color": null, "subreddit_type": "public", "ups": 31, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Discussion", "can_mod_post": false, "score": 31, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1677320954.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.dataengineering", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;This is one of those out-of-the-blue thoughts that you get randomly. I am an expert in sql with many years of experience, but have yet to use Right Joins lol. Is there any specific reason or use-case for this type of join?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "92b74b58-aaca-11eb-b160-0e6181e3773f", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_36en4", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ff4500", "id": "11bhvux", "is_robot_indexable": true, "report_reasons": null, "author": "TheQuiteMind", "discussion_type": null, "num_comments": 14, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/dataengineering/comments/11bhvux/do_right_joins_even_matter/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://old.reddit.com/r/dataengineering/comments/11bhvux/do_right_joins_even_matter/", "subreddit_subscribers": 91094, "created_utc": 1677320954.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "dataengineering", "selftext": "I want to be a data engineer in a coding-heavy role. Like, I don\u2019t want to be a DE that uses tools and SQL only. I have worked as a database developer for ~4 years writing SQL and PLSQL only for ETL reasons. I wanted to do more than that. I am currently working as a software engineer for the past 7 months. Should I stay a software engineer for the next few years so I understand software engineering practices before I jump into a data engineering role that is code heavy? Or, should I just jump into a data engineering role that is code-heavy right now? Assume I have both options.", "author_fullname": "t2_jpjpdkcf", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Should I wait to get into data engineering?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/dataengineering", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_11b7g0l", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.8, "author_flair_background_color": null, "subreddit_type": "public", "ups": 25, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Career", "can_mod_post": false, "score": 25, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1677286327.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.dataengineering", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I want to be a data engineer in a coding-heavy role. Like, I don\u2019t want to be a DE that uses tools and SQL only. I have worked as a database developer for ~4 years writing SQL and PLSQL only for ETL reasons. I wanted to do more than that. I am currently working as a software engineer for the past 7 months. Should I stay a software engineer for the next few years so I understand software engineering practices before I jump into a data engineering role that is code heavy? Or, should I just jump into a data engineering role that is code-heavy right now? Assume I have both options.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "069dd614-a7dc-11eb-8e48-0e90f49436a3", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_36en4", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#349e48", "id": "11b7g0l", "is_robot_indexable": true, "report_reasons": null, "author": "iemback", "discussion_type": null, "num_comments": 15, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/dataengineering/comments/11b7g0l/should_i_wait_to_get_into_data_engineering/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://old.reddit.com/r/dataengineering/comments/11b7g0l/should_i_wait_to_get_into_data_engineering/", "subreddit_subscribers": 91094, "created_utc": 1677286327.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "dataengineering", "selftext": "I've installed the stack (Hadoop, Hive, Spark) into a Centos VM, built everything from sources to make sure it fits together. Then added Delta Lake ([delta.io](https://delta.io)) from their maven repo.\n\nEverything works fine so I finally have my own little playground (we're using Databricks at work)\n\nNow I noticed this little waring when saving a table in delta format to HDFS:\n\n**WARN HiveExternalCatalog: Couldn't find corresponding Hive SerDe for data source provider delta. Persisting data source table \\`vscode\\_vm\\`.\\`hwtable\\_vm\\_vs\\` into Hive metastore in Spark SQL specific format, which is NOT compatible with Hive.**\n\nIt doesn't seem to be a problem. Everything works right as far I can see. I can read the table in all \"clients\" (jobs) be it a shell, a notebook or jdbc thrift session. Hence, I wonder what it is about...\n\nSession:\n\n    import pyspark\n    from delta import *\n    \n    appName = \"vs_test\"\n    master = \"spark://pc.home:7077\"\n    \n    builder = pyspark.sql.SparkSession.builder \\\n        .appName(appName) \\\n        .master(master) \\\n        .enableHiveSupport() \\\n        .config(\"spark.sql.extensions\", \"io.delta.sql.DeltaSparkSessionExtension\") \\\n        .config(\"spark.sql.catalog.spark_catalog\", \"org.apache.spark.sql.delta.catalog.DeltaCatalog\") \\\n        .config(\"spark.cores.max\", \"4\") \\\n        .config(\"spark.executor.memory\", \"2g\")\n    \n    spark = configure_spark_with_delta_pip(builder).getOrCreate()\n\n(load df from a .csv in HDFS)\n\nSave as Table (this is what warns me):\n\n    df.write.format(\"delta\").saveAsTable(\"vscode_vm.hwtable_vm_vs\")\n\nLook into HDFS:\n\n    hdfs dfs -ls /user/hive/warehouse/vscode_vm.db/hwtable_vm_vs/\n\n/user/hive/warehouse/vscode\\_vm.db/hwtable\\_vm\\_vs/part-00000-de750267-3c9a-46c6-8860-714fa45a7a9d-c000.snappy.parquet\n\nPS: the delta-jars are in $SPARK\\_HOME/jars", "author_fullname": "t2_337g1dil", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "HDFS/Spark + Delta: Is this warning dangerous?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/dataengineering", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_11bk5is", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.87, "author_flair_background_color": null, "subreddit_type": "public", "ups": 20, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Help", "can_mod_post": false, "score": 20, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1677328982.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.dataengineering", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve installed the stack (Hadoop, Hive, Spark) into a Centos VM, built everything from sources to make sure it fits together. Then added Delta Lake (&lt;a href=\"https://delta.io\"&gt;delta.io&lt;/a&gt;) from their maven repo.&lt;/p&gt;\n\n&lt;p&gt;Everything works fine so I finally have my own little playground (we&amp;#39;re using Databricks at work)&lt;/p&gt;\n\n&lt;p&gt;Now I noticed this little waring when saving a table in delta format to HDFS:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;WARN HiveExternalCatalog: Couldn&amp;#39;t find corresponding Hive SerDe for data source provider delta. Persisting data source table `vscode_vm`.`hwtable_vm_vs` into Hive metastore in Spark SQL specific format, which is NOT compatible with Hive.&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;It doesn&amp;#39;t seem to be a problem. Everything works right as far I can see. I can read the table in all &amp;quot;clients&amp;quot; (jobs) be it a shell, a notebook or jdbc thrift session. Hence, I wonder what it is about...&lt;/p&gt;\n\n&lt;p&gt;Session:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import pyspark\nfrom delta import *\n\nappName = &amp;quot;vs_test&amp;quot;\nmaster = &amp;quot;spark://pc.home:7077&amp;quot;\n\nbuilder = pyspark.sql.SparkSession.builder \\\n    .appName(appName) \\\n    .master(master) \\\n    .enableHiveSupport() \\\n    .config(&amp;quot;spark.sql.extensions&amp;quot;, &amp;quot;io.delta.sql.DeltaSparkSessionExtension&amp;quot;) \\\n    .config(&amp;quot;spark.sql.catalog.spark_catalog&amp;quot;, &amp;quot;org.apache.spark.sql.delta.catalog.DeltaCatalog&amp;quot;) \\\n    .config(&amp;quot;spark.cores.max&amp;quot;, &amp;quot;4&amp;quot;) \\\n    .config(&amp;quot;spark.executor.memory&amp;quot;, &amp;quot;2g&amp;quot;)\n\nspark = configure_spark_with_delta_pip(builder).getOrCreate()\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;(load df from a .csv in HDFS)&lt;/p&gt;\n\n&lt;p&gt;Save as Table (this is what warns me):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;df.write.format(&amp;quot;delta&amp;quot;).saveAsTable(&amp;quot;vscode_vm.hwtable_vm_vs&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Look into HDFS:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;hdfs dfs -ls /user/hive/warehouse/vscode_vm.db/hwtable_vm_vs/\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;/user/hive/warehouse/vscode_vm.db/hwtable_vm_vs/part-00000-de750267-3c9a-46c6-8860-714fa45a7a9d-c000.snappy.parquet&lt;/p&gt;\n\n&lt;p&gt;PS: the delta-jars are in $SPARK_HOME/jars&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "2ca94cd6-ac27-11eb-a8eb-0e7f457f5bd3", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_36en4", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ea0027", "id": "11bk5is", "is_robot_indexable": true, "report_reasons": null, "author": "eierwerfer", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/dataengineering/comments/11bk5is/hdfsspark_delta_is_this_warning_dangerous/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://old.reddit.com/r/dataengineering/comments/11bk5is/hdfsspark_delta_is_this_warning_dangerous/", "subreddit_subscribers": 91094, "created_utc": 1677328982.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "dataengineering", "selftext": "I have two offers for full time data engineer role, one at Amazon and other at Barclays. What are your views on which one shall I join?", "author_fullname": "t2_b3tv7fn0", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Amazon vs Barclays ( for Data Engineer role )", "link_flair_richtext": [], "subreddit_name_prefixed": "r/dataengineering", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_11b40wx", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.75, "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Career", "can_mod_post": false, "score": 10, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1677277584.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.dataengineering", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have two offers for full time data engineer role, one at Amazon and other at Barclays. What are your views on which one shall I join?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "069dd614-a7dc-11eb-8e48-0e90f49436a3", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_36en4", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#349e48", "id": "11b40wx", "is_robot_indexable": true, "report_reasons": null, "author": "Honest_amicable", "discussion_type": null, "num_comments": 48, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/dataengineering/comments/11b40wx/amazon_vs_barclays_for_data_engineer_role/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://old.reddit.com/r/dataengineering/comments/11b40wx/amazon_vs_barclays_for_data_engineer_role/", "subreddit_subscribers": 91094, "created_utc": 1677277584.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "dataengineering", "selftext": "What is better to prevent table having duplicate rows - composite primary key or unique index and why? I would guess that PK would be more preferable as unique index would take more disk space? Also is there any other added benefit of having unique index?", "author_fullname": "t2_12fc4o", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Composite primary key or Unique index", "link_flair_richtext": [], "subreddit_name_prefixed": "r/dataengineering", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_11bfpmm", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Discussion", "can_mod_post": false, "score": 10, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1677312531.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.dataengineering", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;What is better to prevent table having duplicate rows - composite primary key or unique index and why? I would guess that PK would be more preferable as unique index would take more disk space? Also is there any other added benefit of having unique index?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "92b74b58-aaca-11eb-b160-0e6181e3773f", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_36en4", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ff4500", "id": "11bfpmm", "is_robot_indexable": true, "report_reasons": null, "author": "romanzdk", "discussion_type": null, "num_comments": 12, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/dataengineering/comments/11bfpmm/composite_primary_key_or_unique_index/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://old.reddit.com/r/dataengineering/comments/11bfpmm/composite_primary_key_or_unique_index/", "subreddit_subscribers": 91094, "created_utc": 1677312531.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "dataengineering", "selftext": "We have an ELT architecture in our project where data is pulled from multiple sources into cloud storage (GCS)using APIs invoked by cloud functions. \n\nThe files in GCS are then pushed to BigQuery tables (datalakes) using a data transfer service, configured using the BigQuery console UI.\n\nThe raw data in the datalakes are transformed using scheduled BigQuery SQL queries and stores as dimension and fact tables, which are connected to Tableau dashboards as extracts.\n\nWe did not use any orchestration tool till now as the requirement was to batch load the data once a day only. But now, the dependencies and processes have become quite complicated, that we feel the need for an orchestration tool.\n\nThe preferences are:\n1. The system takes advantage of serverless architecture\n2. Ability to use the transfer services and scheduled queries that we have already built\n3. Minimise costs\n4. Manage dependencies\n5. Easy troubleshooting of failures during pipeline execution \n6. Preferable if Tableau extracts can be invoked by an API call at the last step of the pipeline\n\nWe have narrowed down to:\n1. Cloud Composer which is GCP's flavour of Airflow which is a fully managed service. The pipeline is written in Python.\n2. Cloud workflow which is relatively new, that helps to glue together GCP services and retains the serverless aspect. The pipeline is written in YAML.\n\nPlease suggest whether Cloud Composer or Cloud workflow would be better in my case.", "author_fullname": "t2_ojhggjm", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "GCP: Cloud composer vs Cloud Workflow", "link_flair_richtext": [], "subreddit_name_prefixed": "r/dataengineering", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_11bclg9", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.9, "author_flair_background_color": null, "subreddit_type": "public", "ups": 7, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Discussion", "can_mod_post": false, "score": 7, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": 1677313819.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1677301435.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.dataengineering", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;We have an ELT architecture in our project where data is pulled from multiple sources into cloud storage (GCS)using APIs invoked by cloud functions. &lt;/p&gt;\n\n&lt;p&gt;The files in GCS are then pushed to BigQuery tables (datalakes) using a data transfer service, configured using the BigQuery console UI.&lt;/p&gt;\n\n&lt;p&gt;The raw data in the datalakes are transformed using scheduled BigQuery SQL queries and stores as dimension and fact tables, which are connected to Tableau dashboards as extracts.&lt;/p&gt;\n\n&lt;p&gt;We did not use any orchestration tool till now as the requirement was to batch load the data once a day only. But now, the dependencies and processes have become quite complicated, that we feel the need for an orchestration tool.&lt;/p&gt;\n\n&lt;p&gt;The preferences are:\n1. The system takes advantage of serverless architecture\n2. Ability to use the transfer services and scheduled queries that we have already built\n3. Minimise costs\n4. Manage dependencies\n5. Easy troubleshooting of failures during pipeline execution \n6. Preferable if Tableau extracts can be invoked by an API call at the last step of the pipeline&lt;/p&gt;\n\n&lt;p&gt;We have narrowed down to:\n1. Cloud Composer which is GCP&amp;#39;s flavour of Airflow which is a fully managed service. The pipeline is written in Python.\n2. Cloud workflow which is relatively new, that helps to glue together GCP services and retains the serverless aspect. The pipeline is written in YAML.&lt;/p&gt;\n\n&lt;p&gt;Please suggest whether Cloud Composer or Cloud workflow would be better in my case.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "92b74b58-aaca-11eb-b160-0e6181e3773f", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_36en4", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ff4500", "id": "11bclg9", "is_robot_indexable": true, "report_reasons": null, "author": "raghucc24", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/dataengineering/comments/11bclg9/gcp_cloud_composer_vs_cloud_workflow/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://old.reddit.com/r/dataengineering/comments/11bclg9/gcp_cloud_composer_vs_cloud_workflow/", "subreddit_subscribers": 91094, "created_utc": 1677301435.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "dataengineering", "selftext": "You build pipelines. Presumably some of these end up in an analytics layer, rendered by Tableau or PowerBI or similar. You may take on the duel role of Data Engineer and Analytics Engineer. If so, this question is aimed at you.\n\nData warehouses are, by definition tightly coupled datasets. Micro services on the other hand are loosely coupled. Regardless of sources, does your team have a preference for tightly/loosely coupled data, and if the latter how do you structure your data to allow seamless reporting by your analytics team?\n\nI would love to move towards a more loosely coupled architecture, however downstream of us are the analysts/report developers who want to build consolidated C-suite reports that pull from as much as they possibly can. Maybe the real question is: where do I start?", "author_fullname": "t2_87zfi59a", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How tightly/loosely coupled is your data?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/dataengineering", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_11bebg0", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Discussion", "can_mod_post": false, "score": 8, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1677307361.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.dataengineering", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;You build pipelines. Presumably some of these end up in an analytics layer, rendered by Tableau or PowerBI or similar. You may take on the duel role of Data Engineer and Analytics Engineer. If so, this question is aimed at you.&lt;/p&gt;\n\n&lt;p&gt;Data warehouses are, by definition tightly coupled datasets. Micro services on the other hand are loosely coupled. Regardless of sources, does your team have a preference for tightly/loosely coupled data, and if the latter how do you structure your data to allow seamless reporting by your analytics team?&lt;/p&gt;\n\n&lt;p&gt;I would love to move towards a more loosely coupled architecture, however downstream of us are the analysts/report developers who want to build consolidated C-suite reports that pull from as much as they possibly can. Maybe the real question is: where do I start?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "92b74b58-aaca-11eb-b160-0e6181e3773f", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_36en4", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ff4500", "id": "11bebg0", "is_robot_indexable": true, "report_reasons": null, "author": "Cool_Telephone", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/dataengineering/comments/11bebg0/how_tightlyloosely_coupled_is_your_data/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://old.reddit.com/r/dataengineering/comments/11bebg0/how_tightlyloosely_coupled_is_your_data/", "subreddit_subscribers": 91094, "created_utc": 1677307361.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "dataengineering", "selftext": "I make it a point to pay attention to trends in the labor markets. \n\nLately, at least for me, there has been an influx of azure job opportunities, and to a lessor extent, snowflake. That in and of itself isn't anything to raise an eyebrow to. But it's been weeks since I've gotten any aws opportunities in my inbox, even more so for databricks. Did microsoft and snowflake give out a bunch of free credits or something? The demand is so great, I'm seeing nil from their competitors. \n\nAnyone else noticed this? What gives?\n\nBonus question: Is this trend inspiring any of yall to upskill in azure? I'm overdue myself.", "author_fullname": "t2_7lvmv", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What's up with all these azure and snowflake opportunities in the labor markets?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/dataengineering", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_11bmvtm", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Discussion", "can_mod_post": false, "score": 3, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1677337003.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.dataengineering", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I make it a point to pay attention to trends in the labor markets. &lt;/p&gt;\n\n&lt;p&gt;Lately, at least for me, there has been an influx of azure job opportunities, and to a lessor extent, snowflake. That in and of itself isn&amp;#39;t anything to raise an eyebrow to. But it&amp;#39;s been weeks since I&amp;#39;ve gotten any aws opportunities in my inbox, even more so for databricks. Did microsoft and snowflake give out a bunch of free credits or something? The demand is so great, I&amp;#39;m seeing nil from their competitors. &lt;/p&gt;\n\n&lt;p&gt;Anyone else noticed this? What gives?&lt;/p&gt;\n\n&lt;p&gt;Bonus question: Is this trend inspiring any of yall to upskill in azure? I&amp;#39;m overdue myself.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "92b74b58-aaca-11eb-b160-0e6181e3773f", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_36en4", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ff4500", "id": "11bmvtm", "is_robot_indexable": true, "report_reasons": null, "author": "claytonjr", "discussion_type": null, "num_comments": 10, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/dataengineering/comments/11bmvtm/whats_up_with_all_these_azure_and_snowflake/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://old.reddit.com/r/dataengineering/comments/11bmvtm/whats_up_with_all_these_azure_and_snowflake/", "subreddit_subscribers": 91094, "created_utc": 1677337003.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "dataengineering", "selftext": "First off I\u2019d like to thank this subreddit. Around this time last year I was working in the energy sector in the Project Management space but because of the extensive resources and discussions here I was able to self teach the Python and SQL skills needed for my first DE job!\n\nThis new role is in the finance sector and pays really well for my age (I\u2019m not long out of uni), with lots of additional benefits/bonuses and I\u2019m really enjoying it.\n\nHowever, I\u2019m slightly concerned about the tech stack used. At the moment, I\u2019d say I\u2019m a bit of a reporting/analytics data engineer. We use a mixture of Teradata, SQLS, SSIS and data vis tools. This has really developed my SQL skills but with Python I\u2019m still just self learning in my spare time through projects and then shoe horning into whatever I can at work.\n\nAdditionally, we lack a lot of the software engineering core principles. Only recently utilising git/GitHub properly, no real adoption of TDD etc. As I\u2019m from a Chemical Engineering education, I\u2019ve had no previous education in these and I\u2019m mainly learning by Googling best practices and incorporating in home projects.\n\nTherefore, it\u2019d be great to get some advice from this subreddit as a lot of you have way more experience than I have. Am I putting too much importance on these principles and a modern tech stack? \n\nApologies for the long post, any advice is much appreciated.", "author_fullname": "t2_2o4st1yo", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How important is the tech stack?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/dataengineering", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_11bjv7c", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.89, "author_flair_background_color": null, "subreddit_type": "public", "ups": 7, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Career", "can_mod_post": false, "score": 7, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1677328053.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.dataengineering", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;First off I\u2019d like to thank this subreddit. Around this time last year I was working in the energy sector in the Project Management space but because of the extensive resources and discussions here I was able to self teach the Python and SQL skills needed for my first DE job!&lt;/p&gt;\n\n&lt;p&gt;This new role is in the finance sector and pays really well for my age (I\u2019m not long out of uni), with lots of additional benefits/bonuses and I\u2019m really enjoying it.&lt;/p&gt;\n\n&lt;p&gt;However, I\u2019m slightly concerned about the tech stack used. At the moment, I\u2019d say I\u2019m a bit of a reporting/analytics data engineer. We use a mixture of Teradata, SQLS, SSIS and data vis tools. This has really developed my SQL skills but with Python I\u2019m still just self learning in my spare time through projects and then shoe horning into whatever I can at work.&lt;/p&gt;\n\n&lt;p&gt;Additionally, we lack a lot of the software engineering core principles. Only recently utilising git/GitHub properly, no real adoption of TDD etc. As I\u2019m from a Chemical Engineering education, I\u2019ve had no previous education in these and I\u2019m mainly learning by Googling best practices and incorporating in home projects.&lt;/p&gt;\n\n&lt;p&gt;Therefore, it\u2019d be great to get some advice from this subreddit as a lot of you have way more experience than I have. Am I putting too much importance on these principles and a modern tech stack? &lt;/p&gt;\n\n&lt;p&gt;Apologies for the long post, any advice is much appreciated.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "069dd614-a7dc-11eb-8e48-0e90f49436a3", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_36en4", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#349e48", "id": "11bjv7c", "is_robot_indexable": true, "report_reasons": null, "author": "el527", "discussion_type": null, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/dataengineering/comments/11bjv7c/how_important_is_the_tech_stack/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://old.reddit.com/r/dataengineering/comments/11bjv7c/how_important_is_the_tech_stack/", "subreddit_subscribers": 91094, "created_utc": 1677328053.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "dataengineering", "selftext": "Hi guys, I am still very new to STAR schema and decided to pick some dataset to try it out. Can someone please have a look at my schema design and give some feedback on it. \n\n&amp;#x200B;\n\nhttps://preview.redd.it/yorodl9wbcka1.png?width=1283&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=cedbf7d5c32c67f45db233572126dd44e77cf7ca\n\nI also add the example of the dataset that I am working on\n\n&amp;#x200B;\n\nhttps://preview.redd.it/ozslnsyybcka1.png?width=2880&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=9b4ed1a992f7e3ff46248104c4b3225942b78d3b", "author_fullname": "t2_imktgzwy", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Design STAR schema", "link_flair_richtext": [], "subreddit_name_prefixed": "r/dataengineering", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": 100, "top_awarded_type": null, "hide_score": false, "media_metadata": {"yorodl9wbcka1": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 77, "x": 108, "u": "https://preview.redd.it/yorodl9wbcka1.png?width=108&amp;crop=smart&amp;auto=webp&amp;v=enabled&amp;s=6c8b992af9da13b54166b0c7ba3a3f5a91cfe85f"}, {"y": 154, "x": 216, "u": "https://preview.redd.it/yorodl9wbcka1.png?width=216&amp;crop=smart&amp;auto=webp&amp;v=enabled&amp;s=5f1159a99169818caf453c5d72673853c88b0a12"}, {"y": 229, "x": 320, "u": "https://preview.redd.it/yorodl9wbcka1.png?width=320&amp;crop=smart&amp;auto=webp&amp;v=enabled&amp;s=3b68c396b379c8a9c768d3b6eb785e42e627933a"}, {"y": 458, "x": 640, "u": "https://preview.redd.it/yorodl9wbcka1.png?width=640&amp;crop=smart&amp;auto=webp&amp;v=enabled&amp;s=927433051b577fc00417ba61551690f7e8de856a"}, {"y": 687, "x": 960, "u": "https://preview.redd.it/yorodl9wbcka1.png?width=960&amp;crop=smart&amp;auto=webp&amp;v=enabled&amp;s=91a85847d569af2f861a57c33b63387a1785fb94"}, {"y": 773, "x": 1080, "u": "https://preview.redd.it/yorodl9wbcka1.png?width=1080&amp;crop=smart&amp;auto=webp&amp;v=enabled&amp;s=ee91d9837c929ff0938534e3ff1105feeb5e056d"}], "s": {"y": 919, "x": 1283, "u": "https://preview.redd.it/yorodl9wbcka1.png?width=1283&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=cedbf7d5c32c67f45db233572126dd44e77cf7ca"}, "id": "yorodl9wbcka1"}, "ozslnsyybcka1": {"status": "valid", "e": "Image", "m": "image/png", "p": [{"y": 67, "x": 108, "u": "https://preview.redd.it/ozslnsyybcka1.png?width=108&amp;crop=smart&amp;auto=webp&amp;v=enabled&amp;s=fa32de5b2c8805b377f88f1cf361da767f319df8"}, {"y": 135, "x": 216, "u": "https://preview.redd.it/ozslnsyybcka1.png?width=216&amp;crop=smart&amp;auto=webp&amp;v=enabled&amp;s=ad9ac06801b984e3c77b10f80425813e62b12f4c"}, {"y": 200, "x": 320, "u": "https://preview.redd.it/ozslnsyybcka1.png?width=320&amp;crop=smart&amp;auto=webp&amp;v=enabled&amp;s=3f41626b3283b55e7750d7fedb4475729b21498e"}, {"y": 400, "x": 640, "u": "https://preview.redd.it/ozslnsyybcka1.png?width=640&amp;crop=smart&amp;auto=webp&amp;v=enabled&amp;s=dd77abea57383f4d7d7fafbddd8283d283929500"}, {"y": 600, "x": 960, "u": "https://preview.redd.it/ozslnsyybcka1.png?width=960&amp;crop=smart&amp;auto=webp&amp;v=enabled&amp;s=2def6fd61806928bd5ca081d52902116ff6e2f1f"}, {"y": 675, "x": 1080, "u": "https://preview.redd.it/ozslnsyybcka1.png?width=1080&amp;crop=smart&amp;auto=webp&amp;v=enabled&amp;s=817859a28f489cc0e82a7fff236ad40f91873c16"}], "s": {"y": 1800, "x": 2880, "u": "https://preview.redd.it/ozslnsyybcka1.png?width=2880&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=9b4ed1a992f7e3ff46248104c4b3225942b78d3b"}, "id": "ozslnsyybcka1"}}, "name": "t3_11blma9", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.84, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Help", "can_mod_post": false, "score": 4, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "https://b.thumbs.redditmedia.com/rCeRPdY_UyoCfSBFuEAfu8S1yhFwn1AL1Wzn8OnzeIA.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1677333470.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.dataengineering", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi guys, I am still very new to STAR schema and decided to pick some dataset to try it out. Can someone please have a look at my schema design and give some feedback on it. &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/yorodl9wbcka1.png?width=1283&amp;amp;format=png&amp;amp;auto=webp&amp;amp;v=enabled&amp;amp;s=cedbf7d5c32c67f45db233572126dd44e77cf7ca\"&gt;https://preview.redd.it/yorodl9wbcka1.png?width=1283&amp;amp;format=png&amp;amp;auto=webp&amp;amp;v=enabled&amp;amp;s=cedbf7d5c32c67f45db233572126dd44e77cf7ca&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I also add the example of the dataset that I am working on&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/ozslnsyybcka1.png?width=2880&amp;amp;format=png&amp;amp;auto=webp&amp;amp;v=enabled&amp;amp;s=9b4ed1a992f7e3ff46248104c4b3225942b78d3b\"&gt;https://preview.redd.it/ozslnsyybcka1.png?width=2880&amp;amp;format=png&amp;amp;auto=webp&amp;amp;v=enabled&amp;amp;s=9b4ed1a992f7e3ff46248104c4b3225942b78d3b&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "2ca94cd6-ac27-11eb-a8eb-0e7f457f5bd3", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_36en4", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ea0027", "id": "11blma9", "is_robot_indexable": true, "report_reasons": null, "author": "Acrobatic-Mobile-221", "discussion_type": null, "num_comments": 6, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/dataengineering/comments/11blma9/design_star_schema/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://old.reddit.com/r/dataengineering/comments/11blma9/design_star_schema/", "subreddit_subscribers": 91094, "created_utc": 1677333470.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "dataengineering", "selftext": "As per the title. Curious on how it went, any challenges, and if you started again whether you\u2019d go the same direction?", "author_fullname": "t2_87zfi59a", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Anyone implemented Data Vault in a lake house?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/dataengineering", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_11biyc6", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Discussion", "can_mod_post": false, "score": 2, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1677324873.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.dataengineering", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;As per the title. Curious on how it went, any challenges, and if you started again whether you\u2019d go the same direction?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "92b74b58-aaca-11eb-b160-0e6181e3773f", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_36en4", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ff4500", "id": "11biyc6", "is_robot_indexable": true, "report_reasons": null, "author": "Cool_Telephone", "discussion_type": null, "num_comments": 5, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/dataengineering/comments/11biyc6/anyone_implemented_data_vault_in_a_lake_house/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://old.reddit.com/r/dataengineering/comments/11biyc6/anyone_implemented_data_vault_in_a_lake_house/", "subreddit_subscribers": 91094, "created_utc": 1677324873.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "dataengineering", "selftext": "", "author_fullname": "t2_170m1", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "European Route Planning", "link_flair_richtext": [], "subreddit_name_prefixed": "r/dataengineering", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_11bpmfp", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.86, "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Blog", "can_mod_post": false, "score": 5, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "default", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1677344066.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "tech.marksblogg.com", "allow_live_comments": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "url_overridden_by_dest": "https://tech.marksblogg.com/route-planning-europe-postgresql-pgrouting.html", "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "eb739554-a7db-11eb-95d7-0ec0f8f30313", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_36en4", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#0079d3", "id": "11bpmfp", "is_robot_indexable": true, "report_reasons": null, "author": "marklit", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/dataengineering/comments/11bpmfp/european_route_planning/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://tech.marksblogg.com/route-planning-europe-postgresql-pgrouting.html", "subreddit_subscribers": 91094, "created_utc": 1677344066.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "dataengineering", "selftext": "My data lake has 3 layers: Bronze, Silver and Gold\n\nLet me explain purpose of each layer with an example\n\nWe have 3 files coming into my data lake named A, B and C\n\nIn the Bronze layer, we load all three files into hive layer as it is.\n\nFile data is moved from Bronze to Silver layer only if they pass data quality checks \n\nFinally, for gold layer, we do joins and transformations between multiple tables in Silver layer and load the results into gold layer tables.\n\nNow, this is where I am stumped. Should the golden layer just have views built on top of the Silver layer? What is the point of creating real tables just for golden layer?", "author_fullname": "t2_virernyk", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Would it be beneficial to have only \"views\" in my final golden layer if downstream users are just going to read the data and never write anything to the golden layer.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/dataengineering", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_11bkjve", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Discussion", "can_mod_post": false, "score": 3, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1677330251.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.dataengineering", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;My data lake has 3 layers: Bronze, Silver and Gold&lt;/p&gt;\n\n&lt;p&gt;Let me explain purpose of each layer with an example&lt;/p&gt;\n\n&lt;p&gt;We have 3 files coming into my data lake named A, B and C&lt;/p&gt;\n\n&lt;p&gt;In the Bronze layer, we load all three files into hive layer as it is.&lt;/p&gt;\n\n&lt;p&gt;File data is moved from Bronze to Silver layer only if they pass data quality checks &lt;/p&gt;\n\n&lt;p&gt;Finally, for gold layer, we do joins and transformations between multiple tables in Silver layer and load the results into gold layer tables.&lt;/p&gt;\n\n&lt;p&gt;Now, this is where I am stumped. Should the golden layer just have views built on top of the Silver layer? What is the point of creating real tables just for golden layer?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "92b74b58-aaca-11eb-b160-0e6181e3773f", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_36en4", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ff4500", "id": "11bkjve", "is_robot_indexable": true, "report_reasons": null, "author": "Hitoxi", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/dataengineering/comments/11bkjve/would_it_be_beneficial_to_have_only_views_in_my/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://old.reddit.com/r/dataengineering/comments/11bkjve/would_it_be_beneficial_to_have_only_views_in_my/", "subreddit_subscribers": 91094, "created_utc": 1677330251.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "dataengineering", "selftext": "How do you structure paths in different data lake zones (bronze, silver, gold)? Do you have everywhere the same paths just different bucket? E.g.\n\nbronze/customer/source=a/2023/02/22/raw.json\n\nbronze/customer/source=b/2023/02/22/raw.json\n\nsilver/customer/source=a/2023/02/22/processed.parquet\n\nsilver/customer/source=b/2023/02/22/processed.parquet\n\nSomething like that?", "author_fullname": "t2_12fc4o", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Data lake zones structure", "link_flair_richtext": [], "subreddit_name_prefixed": "r/dataengineering", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": true, "name": "t3_11bs3f0", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Discussion", "can_mod_post": false, "score": 4, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": 1677350611.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1677350094.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.dataengineering", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;How do you structure paths in different data lake zones (bronze, silver, gold)? Do you have everywhere the same paths just different bucket? E.g.&lt;/p&gt;\n\n&lt;p&gt;bronze/customer/source=a/2023/02/22/raw.json&lt;/p&gt;\n\n&lt;p&gt;bronze/customer/source=b/2023/02/22/raw.json&lt;/p&gt;\n\n&lt;p&gt;silver/customer/source=a/2023/02/22/processed.parquet&lt;/p&gt;\n\n&lt;p&gt;silver/customer/source=b/2023/02/22/processed.parquet&lt;/p&gt;\n\n&lt;p&gt;Something like that?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "92b74b58-aaca-11eb-b160-0e6181e3773f", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_36en4", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ff4500", "id": "11bs3f0", "is_robot_indexable": true, "report_reasons": null, "author": "romanzdk", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/dataengineering/comments/11bs3f0/data_lake_zones_structure/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://old.reddit.com/r/dataengineering/comments/11bs3f0/data_lake_zones_structure/", "subreddit_subscribers": 91094, "created_utc": 1677350094.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "dataengineering", "selftext": "Which one is better if I want to find a DE job asap? And which one pays higher?", "author_fullname": "t2_5t56uq7x", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Apache Spark vs Databricks? Which one should I learn to expect more jobs and higher salaries?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/dataengineering", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": true, "name": "t3_11brvxm", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Career", "can_mod_post": false, "score": 2, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1677349586.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.dataengineering", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Which one is better if I want to find a DE job asap? And which one pays higher?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "069dd614-a7dc-11eb-8e48-0e90f49436a3", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_36en4", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#349e48", "id": "11brvxm", "is_robot_indexable": true, "report_reasons": null, "author": "Born-Comment3359", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/dataengineering/comments/11brvxm/apache_spark_vs_databricks_which_one_should_i/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://old.reddit.com/r/dataengineering/comments/11brvxm/apache_spark_vs_databricks_which_one_should_i/", "subreddit_subscribers": 91094, "created_utc": 1677349586.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "dataengineering", "selftext": "i have been learning Azure recently and i noticed that Databricks is quite more integrated into Azure more that it is in AWS (i worked with AWS for 3 years in my previous employment). It is even a part of the Azure Data engineering certificate questions. \n\n&amp;#x200B;\n\nis there any advantage to using Databricks on Azure rather than AWS/GCP ?", "author_fullname": "t2_64nmnknh", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Databricks on AWS vs Azure", "link_flair_richtext": [], "subreddit_name_prefixed": "r/dataengineering", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": true, "name": "t3_11breh6", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Help", "can_mod_post": false, "score": 2, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1677348362.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.dataengineering", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;i have been learning Azure recently and i noticed that Databricks is quite more integrated into Azure more that it is in AWS (i worked with AWS for 3 years in my previous employment). It is even a part of the Azure Data engineering certificate questions. &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;is there any advantage to using Databricks on Azure rather than AWS/GCP ?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "2ca94cd6-ac27-11eb-a8eb-0e7f457f5bd3", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_36en4", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ea0027", "id": "11breh6", "is_robot_indexable": true, "report_reasons": null, "author": "SnooDoggos5883", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/dataengineering/comments/11breh6/databricks_on_aws_vs_azure/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://old.reddit.com/r/dataengineering/comments/11breh6/databricks_on_aws_vs_azure/", "subreddit_subscribers": 91094, "created_utc": 1677348362.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "dataengineering", "selftext": "The best of the best way to pull the Oracle data using AWS Glue in terms of performance for large tables holding 200M records. JDBC is very common. Is JDBC the best way to pull the data out from Oracle? Here we would like pull the data not Oracle team will extract the data and give to us. What is best way to pull the data.", "author_fullname": "t2_3sqs3uub", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Best way to pull the data from Oracle", "link_flair_richtext": [], "subreddit_name_prefixed": "r/dataengineering", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_11bpnsb", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 1.0, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Discussion", "can_mod_post": false, "score": 2, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1677344163.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.dataengineering", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The best of the best way to pull the Oracle data using AWS Glue in terms of performance for large tables holding 200M records. JDBC is very common. Is JDBC the best way to pull the data out from Oracle? Here we would like pull the data not Oracle team will extract the data and give to us. What is best way to pull the data.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "92b74b58-aaca-11eb-b160-0e6181e3773f", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_36en4", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ff4500", "id": "11bpnsb", "is_robot_indexable": true, "report_reasons": null, "author": "priyasweety1", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/dataengineering/comments/11bpnsb/best_way_to_pull_the_data_from_oracle/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://old.reddit.com/r/dataengineering/comments/11bpnsb/best_way_to_pull_the_data_from_oracle/", "subreddit_subscribers": 91094, "created_utc": 1677344163.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "dataengineering", "selftext": " I have some lambdas and in the future some glue jobs which will be generating and moving files between the different zones (bronce, silver, etc). What are the advantages of using lake formation? Is it worth the cost? What I'm missing if I don't use it? I still don't totally get its purpose \ud83d\udc49\ud83d\udc48", "author_fullname": "t2_dpj60sgl", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "AWS Lake Formation use cases", "link_flair_richtext": [], "subreddit_name_prefixed": "r/dataengineering", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_11bp06b", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.75, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Discussion", "can_mod_post": false, "score": 2, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1677342525.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.dataengineering", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have some lambdas and in the future some glue jobs which will be generating and moving files between the different zones (bronce, silver, etc). What are the advantages of using lake formation? Is it worth the cost? What I&amp;#39;m missing if I don&amp;#39;t use it? I still don&amp;#39;t totally get its purpose \ud83d\udc49\ud83d\udc48&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "92b74b58-aaca-11eb-b160-0e6181e3773f", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_36en4", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ff4500", "id": "11bp06b", "is_robot_indexable": true, "report_reasons": null, "author": "_unwin", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/dataengineering/comments/11bp06b/aws_lake_formation_use_cases/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://old.reddit.com/r/dataengineering/comments/11bp06b/aws_lake_formation_use_cases/", "subreddit_subscribers": 91094, "created_utc": 1677342525.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "dataengineering", "selftext": "I have a use case where set of containerized workloads send their internal database's state through S3/RESTAPI based on AWS and trying to build an analytics with AWS Glue + Athena for it. I am looking for effective way to capture the changed data (specifically a set of events in the payload) and still make effective use of Glue + Sparks distribution. Here are more details :   \n\n\n1. Devices would be in the numbers of 20K - 30K sending data once/twice a day  \n\n2. The tools in these devices/containers are well written to capture the details of some of its internal database, form a JSON payload and send it. For each device, one example use case payload be like  :   \n{ \"device\\_firmware\": \"val\", \"device\\_name\": \"b\", \"device\\_prop1\": \"\", ... \"all\\_events\": \\[\\] }  \n\n3. As you can see for a particular use case its basically certain properties + all\\_events.  all\\_events is not new events, but all the events that have happened. So day1 for device1 it could be 10, next day 15 (5 new events added). This is because the architecture does not want to load these devices for any computation/diff of what was sent last and write any code to send diff + its possible they may go offiline for days, and once online should sync safely and send their complete state to the server.  \n\n4. Size of these all\\_events is not very large and does not grow a lot everyday but its not small either so expect it'd grow over say few months.  \n\n\n**Questions/comments** :   \n\n\n1. I have experience on Glue + Athena where a new data would land and I'd transform -&gt; parquet and load this into target Glue for Athena consumption, the Spark jobs are simple there.  \n\n2. I understand in above case, I'd have to do the compute/ keep some state of last processed/hash on ids and only load new ones however, I am also okay to fully load the complete state everytime as well and overwrite it. However, it means I'd have to overwrite the Parquet in target and do not know if the Spark workers can scale there as it has to map to that parquet file name when overriding. Want to hear suggestions here..  \n\n3. Hudi/Iceberg could be options here for upserts. If that is the case are there any performance considerations when utilizing large number of workers. E.g. if say I have such data for 20K devices in my S3 bucket and do the upserts, does Spark know how to distribute it in standard spark way where more workers can do this quickly? (each device state is independent so there is no shuffle or joins or anything)   \n\n4. In a traditional warehouses, if we have such use case where source dumps the complete state and not changed data, what is the reading/resources you'd recommend ?", "author_fullname": "t2_qg4yidm6", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "AWS Data Lake + capturing only changed data from state dumps", "link_flair_richtext": [], "subreddit_name_prefixed": "r/dataengineering", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_11bo3cy", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.76, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Help", "can_mod_post": false, "score": 2, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1677340162.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.dataengineering", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have a use case where set of containerized workloads send their internal database&amp;#39;s state through S3/RESTAPI based on AWS and trying to build an analytics with AWS Glue + Athena for it. I am looking for effective way to capture the changed data (specifically a set of events in the payload) and still make effective use of Glue + Sparks distribution. Here are more details :   &lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;Devices would be in the numbers of 20K - 30K sending data once/twice a day  &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;The tools in these devices/containers are well written to capture the details of some of its internal database, form a JSON payload and send it. For each device, one example use case payload be like  :&lt;br/&gt;\n{ &amp;quot;device_firmware&amp;quot;: &amp;quot;val&amp;quot;, &amp;quot;device_name&amp;quot;: &amp;quot;b&amp;quot;, &amp;quot;device_prop1&amp;quot;: &amp;quot;&amp;quot;, ... &amp;quot;all_events&amp;quot;: [] }  &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;As you can see for a particular use case its basically certain properties + all_events.  all_events is not new events, but all the events that have happened. So day1 for device1 it could be 10, next day 15 (5 new events added). This is because the architecture does not want to load these devices for any computation/diff of what was sent last and write any code to send diff + its possible they may go offiline for days, and once online should sync safely and send their complete state to the server.  &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Size of these all_events is not very large and does not grow a lot everyday but its not small either so expect it&amp;#39;d grow over say few months.  &lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;&lt;strong&gt;Questions/comments&lt;/strong&gt; :   &lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;I have experience on Glue + Athena where a new data would land and I&amp;#39;d transform -&amp;gt; parquet and load this into target Glue for Athena consumption, the Spark jobs are simple there.  &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;I understand in above case, I&amp;#39;d have to do the compute/ keep some state of last processed/hash on ids and only load new ones however, I am also okay to fully load the complete state everytime as well and overwrite it. However, it means I&amp;#39;d have to overwrite the Parquet in target and do not know if the Spark workers can scale there as it has to map to that parquet file name when overriding. Want to hear suggestions here..  &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Hudi/Iceberg could be options here for upserts. If that is the case are there any performance considerations when utilizing large number of workers. E.g. if say I have such data for 20K devices in my S3 bucket and do the upserts, does Spark know how to distribute it in standard spark way where more workers can do this quickly? (each device state is independent so there is no shuffle or joins or anything)   &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;In a traditional warehouses, if we have such use case where source dumps the complete state and not changed data, what is the reading/resources you&amp;#39;d recommend ?&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "2ca94cd6-ac27-11eb-a8eb-0e7f457f5bd3", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_36en4", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ea0027", "id": "11bo3cy", "is_robot_indexable": true, "report_reasons": null, "author": "Other_Cartoonist7071", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/dataengineering/comments/11bo3cy/aws_data_lake_capturing_only_changed_data_from/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://old.reddit.com/r/dataengineering/comments/11bo3cy/aws_data_lake_capturing_only_changed_data_from/", "subreddit_subscribers": 91094, "created_utc": 1677340162.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "dataengineering", "selftext": "Hey everyone,  \n  \nI was curious if anyone is scraping jobs data and what solution is being used.  \n  \nI am looking to pass company name as a parameter to pull jobs data. It does not have to be extensive. This is just tracking the number of open jobs, position title, position description.   \n  \nInitially I was going to build a custom python selenium parser for LinkedIn as I have built a similar parser for freight data previously. Although, my parser was quite slow and after looking into some APIs like SerpAPI I thought maybe there would be a more extensive solution (possibly more sites than LinkedIn) that wouldn't cost too terribly much.  \n  \nThere will likely be 1000-2000 company names that need parsed daily. The plan would be to icrease the velocity of this parsing over time to near-real-time but that is not important in the near future. This is for a personal project so the price is important.    \n  \nThank you all in advance!", "author_fullname": "t2_326jvb", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Scraping Job Data Solution", "link_flair_richtext": [], "subreddit_name_prefixed": "r/dataengineering", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_11bmio5", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.76, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Discussion", "can_mod_post": false, "score": 2, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1677336000.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.dataengineering", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey everyone,  &lt;/p&gt;\n\n&lt;p&gt;I was curious if anyone is scraping jobs data and what solution is being used.  &lt;/p&gt;\n\n&lt;p&gt;I am looking to pass company name as a parameter to pull jobs data. It does not have to be extensive. This is just tracking the number of open jobs, position title, position description.   &lt;/p&gt;\n\n&lt;p&gt;Initially I was going to build a custom python selenium parser for LinkedIn as I have built a similar parser for freight data previously. Although, my parser was quite slow and after looking into some APIs like SerpAPI I thought maybe there would be a more extensive solution (possibly more sites than LinkedIn) that wouldn&amp;#39;t cost too terribly much.  &lt;/p&gt;\n\n&lt;p&gt;There will likely be 1000-2000 company names that need parsed daily. The plan would be to icrease the velocity of this parsing over time to near-real-time but that is not important in the near future. This is for a personal project so the price is important.    &lt;/p&gt;\n\n&lt;p&gt;Thank you all in advance!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "92b74b58-aaca-11eb-b160-0e6181e3773f", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_36en4", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ff4500", "id": "11bmio5", "is_robot_indexable": true, "report_reasons": null, "author": "ShouldHaveWentBio", "discussion_type": null, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/dataengineering/comments/11bmio5/scraping_job_data_solution/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://old.reddit.com/r/dataengineering/comments/11bmio5/scraping_job_data_solution/", "subreddit_subscribers": 91094, "created_utc": 1677336000.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "dataengineering", "selftext": "Lets say I have a DAG that runs every night. Every dag run has assigned start date and end date by default (Airflow built-in). \nOne day I need to rerun some of the tasks in this particular dag run. Currently, our applications rely on the start and end date passed from dag run. The apps take these parameters and based on them loads data between these two dates. So, if we want to rerun some tasks we go to the specific dag run and \u201cclear\u201d the tasks. (btw. we are talking about both - data extraction and transformation apps)\n\nHowever, I am thinking of maybe implementing different approach. That is having \u201cstaging\u201d data area where I would always put the data I want to process and after data is processed, clear up this stage. My motivation for this is that it might simplify rerunning particular tasks for longer history as now if I need to rerun tasks for lets say 30 days - I have to rerun 30 runs (times number of tasks needed to rerun) which is pretty complicated. In this new setup I would just copy all data needed to rerun 30days history into the \u201cstaging\u201d data area and manually trigger new dag run a let entire dag run even if some of the tasks would not have to do any processing. So apps would not rely on specific start and end date parameter but rather on the content of the staging data area. \n\nWhat do you think? Does it make sense? Do you see any potential issues? How do you approach this?", "author_fullname": "t2_12fc4o", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Airflow reruns best practices", "link_flair_richtext": [], "subreddit_name_prefixed": "r/dataengineering", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_11bin0l", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.76, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Discussion", "can_mod_post": false, "score": 2, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1677323745.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.dataengineering", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Lets say I have a DAG that runs every night. Every dag run has assigned start date and end date by default (Airflow built-in). \nOne day I need to rerun some of the tasks in this particular dag run. Currently, our applications rely on the start and end date passed from dag run. The apps take these parameters and based on them loads data between these two dates. So, if we want to rerun some tasks we go to the specific dag run and \u201cclear\u201d the tasks. (btw. we are talking about both - data extraction and transformation apps)&lt;/p&gt;\n\n&lt;p&gt;However, I am thinking of maybe implementing different approach. That is having \u201cstaging\u201d data area where I would always put the data I want to process and after data is processed, clear up this stage. My motivation for this is that it might simplify rerunning particular tasks for longer history as now if I need to rerun tasks for lets say 30 days - I have to rerun 30 runs (times number of tasks needed to rerun) which is pretty complicated. In this new setup I would just copy all data needed to rerun 30days history into the \u201cstaging\u201d data area and manually trigger new dag run a let entire dag run even if some of the tasks would not have to do any processing. So apps would not rely on specific start and end date parameter but rather on the content of the staging data area. &lt;/p&gt;\n\n&lt;p&gt;What do you think? Does it make sense? Do you see any potential issues? How do you approach this?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "92b74b58-aaca-11eb-b160-0e6181e3773f", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_36en4", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ff4500", "id": "11bin0l", "is_robot_indexable": true, "report_reasons": null, "author": "romanzdk", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/dataengineering/comments/11bin0l/airflow_reruns_best_practices/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://old.reddit.com/r/dataengineering/comments/11bin0l/airflow_reruns_best_practices/", "subreddit_subscribers": 91094, "created_utc": 1677323745.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "dataengineering", "selftext": "My team's data processing / cleanup involves creating an exclusion field where we track all exclusions that apply to each line in a concatenated string. Then, we have a single \"inclusion\" field which assigns a final value based on a pre-defined hierarchy of the applicable exclusion codes. \n\nThis was set up with each exclusion being represented by a single letter, and the final inclusion code is based on the left-most character (they're applied in the hierarchical order). For example, if a line is missing some information (exclusion code M) and the record was submitted incorrectly (S), it'll have the exclusion code 'MS', and the 'M' will go into the 'Data Quality' bucket. If, however, a different line was only submitted incorrectly, it'll have an exclusion code 'S' and go into the \"Submission Issues\" bucket.\n\n&amp;#x200B;\n\nThis worked fine at first because we only had 15 exclusions. However, we've grown to 34 exclusions, meaning we've gone through all the letters of the alphabet and we'll soon run out of single-digit numbers. \n\n&amp;#x200B;\n\n**Does anyone have a suggestion on a more robust way to handle this**, so that we can continue to track all exclusions that apply to any particular line and be able to boil it down to a single field for users?\n\n&amp;#x200B;\n\nI thought about expanding to 2 digits, but I'd like something that's easier to scale if we end up adding a ton of exclusions down the road. I also worry about if we did 2 digits then a user might erroneously think exclusions '02' applies to a line when really it was '10' and '23' with the string '0142**1*****02*****3**94'. I'm not really sure about the file size implications of keeping this in a single field vs tracking all of these exclusions in their own single character field, but I think they switched from the latter to the former before I got here so I'm guessing a concatenated field is preferrable.", "author_fullname": "t2_avuzo09", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What's a good, robust option for tracking all applicable flags on a dataset?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/dataengineering", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_11b4cu9", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.76, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Help", "can_mod_post": false, "score": 2, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1677278427.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.dataengineering", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;My team&amp;#39;s data processing / cleanup involves creating an exclusion field where we track all exclusions that apply to each line in a concatenated string. Then, we have a single &amp;quot;inclusion&amp;quot; field which assigns a final value based on a pre-defined hierarchy of the applicable exclusion codes. &lt;/p&gt;\n\n&lt;p&gt;This was set up with each exclusion being represented by a single letter, and the final inclusion code is based on the left-most character (they&amp;#39;re applied in the hierarchical order). For example, if a line is missing some information (exclusion code M) and the record was submitted incorrectly (S), it&amp;#39;ll have the exclusion code &amp;#39;MS&amp;#39;, and the &amp;#39;M&amp;#39; will go into the &amp;#39;Data Quality&amp;#39; bucket. If, however, a different line was only submitted incorrectly, it&amp;#39;ll have an exclusion code &amp;#39;S&amp;#39; and go into the &amp;quot;Submission Issues&amp;quot; bucket.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;This worked fine at first because we only had 15 exclusions. However, we&amp;#39;ve grown to 34 exclusions, meaning we&amp;#39;ve gone through all the letters of the alphabet and we&amp;#39;ll soon run out of single-digit numbers. &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Does anyone have a suggestion on a more robust way to handle this&lt;/strong&gt;, so that we can continue to track all exclusions that apply to any particular line and be able to boil it down to a single field for users?&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I thought about expanding to 2 digits, but I&amp;#39;d like something that&amp;#39;s easier to scale if we end up adding a ton of exclusions down the road. I also worry about if we did 2 digits then a user might erroneously think exclusions &amp;#39;02&amp;#39; applies to a line when really it was &amp;#39;10&amp;#39; and &amp;#39;23&amp;#39; with the string &amp;#39;0142&lt;strong&gt;1&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;02&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;3&lt;/strong&gt;94&amp;#39;. I&amp;#39;m not really sure about the file size implications of keeping this in a single field vs tracking all of these exclusions in their own single character field, but I think they switched from the latter to the former before I got here so I&amp;#39;m guessing a concatenated field is preferrable.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "2ca94cd6-ac27-11eb-a8eb-0e7f457f5bd3", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_36en4", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ea0027", "id": "11b4cu9", "is_robot_indexable": true, "report_reasons": null, "author": "Burton_Gustice", "discussion_type": null, "num_comments": 3, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/dataengineering/comments/11b4cu9/whats_a_good_robust_option_for_tracking_all/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://old.reddit.com/r/dataengineering/comments/11b4cu9/whats_a_good_robust_option_for_tracking_all/", "subreddit_subscribers": 91094, "created_utc": 1677278427.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "dataengineering", "selftext": "dear team. just need an advice on how to go about my career.\n\nI used to be a very good oracle dba 10 years ago then shifted to technical project management which i hate. i started studying snowflake and got snowpro core cert and currently studying dbt. i want your advice on what is next or what the path i should follow to find a job in data engineering world. \n\nsnowflak then dbt then what. any recommendations is highly apprciated i am doing that on my own with no guidance", "author_fullname": "t2_dbndze4d", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "snowflake dbt ...etc", "link_flair_richtext": [], "subreddit_name_prefixed": "r/dataengineering", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_11b3rom", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Career", "can_mod_post": false, "score": 2, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1677276923.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.dataengineering", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;dear team. just need an advice on how to go about my career.&lt;/p&gt;\n\n&lt;p&gt;I used to be a very good oracle dba 10 years ago then shifted to technical project management which i hate. i started studying snowflake and got snowpro core cert and currently studying dbt. i want your advice on what is next or what the path i should follow to find a job in data engineering world. &lt;/p&gt;\n\n&lt;p&gt;snowflak then dbt then what. any recommendations is highly apprciated i am doing that on my own with no guidance&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "069dd614-a7dc-11eb-8e48-0e90f49436a3", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_36en4", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#349e48", "id": "11b3rom", "is_robot_indexable": true, "report_reasons": null, "author": "Secure_Chipmunk991", "discussion_type": null, "num_comments": 11, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/dataengineering/comments/11b3rom/snowflake_dbt_etc/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://old.reddit.com/r/dataengineering/comments/11b3rom/snowflake_dbt_etc/", "subreddit_subscribers": 91094, "created_utc": 1677276923.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "dataengineering", "selftext": "hi all, I work in a data engineering role for a large pharma company and i'm just trying to get an idea of where everyone stands on the whole work from home vs return to office mess that a lot of  us are in. Some of us are strictly at home, others are hybrid and others are full time in the office. Personally, I'm hybrid 3 days a week and its honestly pointless.  I'm stuck in an office that is big, loud and noisy and its hard to concentrate. Worst of all, my team is spread out through the country so nobody in this office is on my team.  its a 45 minute commute with traffic and it sucks. I'm 100x more productive at home. For some of my teammates, they work in big empty offices which I think is even worse. \n\n[View Poll](https://www.reddit.com/poll/11bng86)", "author_fullname": "t2_stdv2q27", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I am more productive and happier going into an office as opposed to working remotely from home", "link_flair_richtext": [], "subreddit_name_prefixed": "r/dataengineering", "hidden": false, "pwls": 6, "link_flair_css_class": "", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_11bng86", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.6, "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Discussion", "can_mod_post": false, "score": 1, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1677338492.0, "link_flair_type": "text", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.dataengineering", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;hi all, I work in a data engineering role for a large pharma company and i&amp;#39;m just trying to get an idea of where everyone stands on the whole work from home vs return to office mess that a lot of  us are in. Some of us are strictly at home, others are hybrid and others are full time in the office. Personally, I&amp;#39;m hybrid 3 days a week and its honestly pointless.  I&amp;#39;m stuck in an office that is big, loud and noisy and its hard to concentrate. Worst of all, my team is spread out through the country so nobody in this office is on my team.  its a 45 minute commute with traffic and it sucks. I&amp;#39;m 100x more productive at home. For some of my teammates, they work in big empty offices which I think is even worse. &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.reddit.com/poll/11bng86\"&gt;View Poll&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "92b74b58-aaca-11eb-b160-0e6181e3773f", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_36en4", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ff4500", "id": "11bng86", "is_robot_indexable": true, "report_reasons": null, "author": "xrt679", "discussion_type": null, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "poll_data": {"prediction_status": null, "total_stake_amount": null, "voting_end_timestamp": 1677597692935, "options": [{"text": "YES", "id": "21777559"}, {"text": "NO", "id": "21777560"}], "vote_updates_remained": null, "is_prediction": false, "resolved_option_id": null, "user_won_amount": null, "user_selection": null, "total_vote_count": 65, "tournament_id": null}, "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/dataengineering/comments/11bng86/i_am_more_productive_and_happier_going_into_an/", "parent_whitelist_status": "all_ads", "stickied": false, "mod_reports": [], "url": "https://old.reddit.com/r/dataengineering/comments/11bng86/i_am_more_productive_and_happier_going_into_an/", "subreddit_subscribers": 91094, "created_utc": 1677338492.0, "num_crossposts": 0, "media": null, "is_video": false}}], "before": null}}